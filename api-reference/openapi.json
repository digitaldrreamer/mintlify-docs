{
    "swagger": "2.0",
    "info": {
        "description": "REST API Gateway for the SD Proctor microservices architecture.\n\nThis API provides HTTP endpoints for authentication, user management, session management, and more.\n\n## Authentication\n\nMost endpoints require authentication using JWT tokens. Include the token in the Authorization header:\n\n```\nAuthorization: Bearer \u003cyour-jwt-token\u003e\n```\n\n## Roles\n\nThe system supports four main roles:\n- **candidate**: Regular users taking exams\n- **mentor**: Users who can manage candidates and view results\n- **admin**: Full administrative access\n- **super_admin**: Highest level access including role management",
        "title": "SD Proctor API Gateway",
        "contact": {
            "name": "SD Proctor API Support",
            "email": "support@sdproctor.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "api-gateway-wzvv6inzaa-ue.a.run.app",
    "schemes": [
        "https"
    ],
    "basePath": "/api/v1",
    "paths": {
        "/auth/check-permission": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if the authenticated user has permission for a specific resource and action",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check user permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "resource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Action name",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user and invalidate session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user information for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "post": {
                "description": "Validate the provided JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate JWT token",
                "parameters": [
                    {
                        "description": "Token to validate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ValidateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ValidateTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/biometric/continuous-verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform continuous biometric verification during active session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Continuous verification",
                "parameters": [
                    {
                        "description": "Continuous verification data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ContinuousVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ContinuousVerificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 6
            }
        },
        "/biometric/liveness": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Detect if image is from a live person using facial attributes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Detect liveness",
                "parameters": [
                    {
                        "description": "Liveness detection data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DetectLivenessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.DetectLivenessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 7
            }
        },
        "/biometric/record/{recordId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific biometric record by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Get biometric record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Biometric record ID",
                        "name": "recordId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 9
            }
        },
        "/biometric/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register biometric data for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Register biometric data",
                "parameters": [
                    {
                        "description": "Biometric registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.RegisterBiometricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.RegisterBiometricResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 1
            }
        },
        "/biometric/session/active": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about the user's active biometric session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Get active biometric session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.GetActiveBiometricSessionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 4
            }
        },
        "/biometric/session/end": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "End an active biometric verification session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "End biometric session",
                "parameters": [
                    {
                        "description": "Session end data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.EndBiometricSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.EndBiometricSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 3
            }
        },
        "/biometric/session/start": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start a new biometric verification session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Start biometric session",
                "parameters": [
                    {
                        "description": "Session configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.StartBiometricSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.StartBiometricSessionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 2
            }
        },
        "/biometric/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get biometric registration status and records for the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Get biometric status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.BiometricStatusResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 8
            }
        },
        "/biometric/verify": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify user identity using biometric data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Biometric"
                ],
                "summary": "Verify identity",
                "parameters": [
                    {
                        "description": "Identity verification data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.VerifyIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.VerifyIdentityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "x-order": 5
            }
        },
        "/docs": {
            "get": {
                "description": "Interactive API documentation using Scalar",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "API Documentation",
                "responses": {
                    "200": {
                        "description": "API documentation page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/auto": {
            "get": {
                "description": "Auto-generated interactive API documentation using Swagger UI",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "Auto-generated API Documentation",
                "responses": {
                    "200": {
                        "description": "Auto-generated API documentation page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/openapi.yaml": {
            "get": {
                "description": "OpenAPI 3.0 specification in YAML format",
                "produces": [
                    "application/x-yaml"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "OpenAPI Specification",
                "responses": {
                    "200": {
                        "description": "OpenAPI specification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/redoc": {
            "get": {
                "description": "Interactive API documentation using Redoc",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "API Documentation (Redoc)",
                "responses": {
                    "200": {
                        "description": "API documentation page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/swagger": {
            "get": {
                "description": "Interactive API documentation using Swagger UI",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "API Documentation (Swagger UI)",
                "responses": {
                    "200": {
                        "description": "API documentation page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/swagger.json": {
            "get": {
                "description": "Auto-generated Swagger JSON specification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "Auto-generated Swagger JSON",
                "responses": {
                    "200": {
                        "description": "Swagger JSON specification",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/docs/swagger.yaml": {
            "get": {
                "description": "OpenAPI 3.0 specification in YAML format",
                "produces": [
                    "application/x-yaml"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "Swagger Specification",
                "responses": {
                    "200": {
                        "description": "OpenAPI specification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/exams": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all exams associated with the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "List all exams for user",
                "responses": {
                    "200": {
                        "description": "Exams retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new exam with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Create a new exam",
                "parameters": [
                    {
                        "description": "Exam creation request",
                        "name": "exam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.CreateExamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Exam created successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/submit": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submit answers for an active exam session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Submit exam answers",
                "parameters": [
                    {
                        "description": "Exam submission request",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.SubmitExamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamSubmissionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific exam by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Get exam by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/{id}/results": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve results for a specific exam session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Get exam results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Results retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamResultsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid exam ID or session ID",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/{id}/start": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start a new exam session for the specified exam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Start an exam session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam session started successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/{id}/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve statistics for a specific exam (admin/instructor only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Get exam statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exams/{id}/validate-access": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if user has access to a specific exam",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exams"
                ],
                "summary": "Validate exam access",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access validation successful",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamAccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid exam ID",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Access denied",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamAccessResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the API Gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/live": {
            "get": {
                "description": "Check if the API Gateway is alive",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Liveness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the API Gateway is ready to serve requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all sessions for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get user sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/active": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all active sessions across all users (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get all active sessions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/all": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deactivate all sessions for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Deactivate all user sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/cleanup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove all expired sessions from the system (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Cleanup expired sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/current": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deactivate the current user's session (logout)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Deactivate current session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/user/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all sessions for a specific user (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Get user sessions by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/user/{id}/all": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deactivate all sessions for a specific user (admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Deactivate all sessions for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/{token}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deactivate a specific session by token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Deactivate session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions/{token}/extend": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Extend the duration of a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Extend session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Extension duration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ExtendSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get users with pagination and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Sort order (asc/desc)",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/exams/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve paginated exam history for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user's exam history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam history retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamHistoryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the authenticated user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UserProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/role/{role}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users with a specific role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get users by role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search users based on various criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "description": "Search criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.SearchUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive user statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/role": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.UpdateUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Set user active or inactive status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Set user status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.SetUserStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/verify-email": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify a user's email address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Verify user email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api-gateway_internal_models_exam_models.CreateExamRequest": {
            "type": "object",
            "required": [
                "duration",
                "title"
            ],
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Basic mathematics quiz covering algebra"
                },
                "duration": {
                    "type": "integer",
                    "example": 90
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_models_exam_models.Question"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Mathematics Quiz"
                }
            }
        },
        "api-gateway_internal_models_exam_models.Exam": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "user_456"
                },
                "description": {
                    "type": "string",
                    "example": "Basic mathematics quiz"
                },
                "duration": {
                    "type": "integer",
                    "example": 3600
                },
                "id": {
                    "type": "string",
                    "example": "exam_123"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_models_exam_models.Question"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Mathematics Quiz"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamAccessResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "exam": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamInfo"
                },
                "has_access": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Access granted"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.Exam"
                },
                "message": {
                    "type": "string",
                    "example": "Exam created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamHistoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_models_exam_models.Exam"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.Pagination"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer",
                    "example": 1640995200
                },
                "created_by": {
                    "type": "string",
                    "example": "user_456"
                },
                "description": {
                    "type": "string",
                    "example": "Basic mathematics quiz"
                },
                "duration": {
                    "type": "integer",
                    "example": 3600
                },
                "id": {
                    "type": "string",
                    "example": "exam_123"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "questions": {
                    "type": "integer",
                    "example": 10
                },
                "title": {
                    "type": "string",
                    "example": "Mathematics Quiz"
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 5
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_models_exam_models.Exam"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.Exam"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamResult": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "string",
                    "example": "exam_123"
                },
                "id": {
                    "type": "string",
                    "example": "result_123"
                },
                "max_score": {
                    "type": "number",
                    "example": 100
                },
                "passed": {
                    "type": "boolean",
                    "example": true
                },
                "score": {
                    "type": "number",
                    "example": 85.5
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                },
                "submitted_at": {
                    "type": "integer",
                    "example": 1640995200
                },
                "user_id": {
                    "type": "string",
                    "example": "user_456"
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamResultsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamResult"
                },
                "message": {
                    "type": "string",
                    "example": "Results retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamSession": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "string",
                    "example": "exam_123"
                },
                "expires_at": {
                    "type": "integer",
                    "example": 1640998800
                },
                "id": {
                    "type": "string",
                    "example": "session_123"
                },
                "started_at": {
                    "type": "integer",
                    "example": 1640995200
                },
                "token": {
                    "type": "string",
                    "example": "session_token_123"
                },
                "user_id": {
                    "type": "string",
                    "example": "user_456"
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamSessionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamSession"
                },
                "message": {
                    "type": "string",
                    "example": "Exam session started successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamStats": {
            "type": "object",
            "properties": {
                "average_score": {
                    "type": "number",
                    "example": 78.5
                },
                "completed_attempts": {
                    "type": "integer",
                    "example": 20
                },
                "exam_id": {
                    "type": "string",
                    "example": "exam_123"
                },
                "pass_rate": {
                    "type": "number",
                    "example": 80
                },
                "total_attempts": {
                    "type": "integer",
                    "example": 25
                },
                "total_participants": {
                    "type": "integer",
                    "example": 20
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamStatsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamStats"
                },
                "message": {
                    "type": "string",
                    "example": "Exam statistics retrieved successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.ExamSubmissionResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api-gateway_internal_models_exam_models.ExamResult"
                },
                "message": {
                    "type": "string",
                    "example": "Exam submitted successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api-gateway_internal_models_exam_models.Pagination": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 50
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "api-gateway_internal_models_exam_models.Question": {
            "type": "object",
            "properties": {
                "correct_answer": {
                    "type": "string",
                    "example": "Option A"
                },
                "id": {
                    "type": "string",
                    "example": "q1"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Option A",
                        "Option B",
                        "Option C",
                        "Option D"
                    ]
                },
                "text": {
                    "type": "string",
                    "example": "What is 2+2?"
                },
                "type": {
                    "type": "string",
                    "example": "multiple_choice"
                }
            }
        },
        "api-gateway_internal_models_exam_models.SubmitExamRequest": {
            "type": "object",
            "required": [
                "answers",
                "session_id"
            ],
            "properties": {
                "answers": {
                    "description": "Question ID -\u003e Answer",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api-gateway_internal_services.Anomaly": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "detectedAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "severity": {
                    "type": "number",
                    "format": "float32"
                },
                "type": {
                    "$ref": "#/definitions/api-gateway_internal_services.AnomalyType"
                }
            }
        },
        "api-gateway_internal_services.AnomalyType": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "AnomalyTypeIdentityMismatch",
                "AnomalyTypeLivenessFailure",
                "AnomalyTypeMultipleFaces",
                "AnomalyTypeNoFaceDetected",
                "AnomalyTypePoorImageQuality",
                "AnomalyTypeSuspiciousBehavior"
            ]
        },
        "api-gateway_internal_services.BiometricRecord": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "qualityScore": {
                    "type": "number",
                    "format": "float32"
                },
                "registeredAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "$ref": "#/definitions/api-gateway_internal_services.BiometricType"
                }
            }
        },
        "api-gateway_internal_services.BiometricSessionInfo": {
            "type": "object",
            "properties": {
                "anomalyCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "continuousMonitoring": {
                    "type": "boolean"
                },
                "failedVerifications": {
                    "type": "integer",
                    "format": "int64"
                },
                "initialVerificationPassed": {
                    "type": "boolean"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastVerificationAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "sessionID": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "integer",
                    "format": "int64"
                },
                "successfulVerifications": {
                    "type": "integer",
                    "format": "int64"
                },
                "userID": {
                    "type": "string"
                },
                "verificationAttempts": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "api-gateway_internal_services.BiometricType": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "BiometricTypeFace",
                "BiometricTypeFingerprint",
                "BiometricTypeVoice"
            ]
        },
        "api-gateway_internal_services.ChallengeType": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "ChallengeTypeBlink",
                "ChallengeTypeSmile",
                "ChallengeTypeTurnHeadLeft",
                "ChallengeTypeTurnHeadRight",
                "ChallengeTypeNod"
            ]
        },
        "api-gateway_internal_services.FaceQuality": {
            "type": "object",
            "properties": {
                "brightness": {
                    "type": "number",
                    "format": "float32"
                },
                "eyesVisible": {
                    "type": "boolean"
                },
                "faceSize": {
                    "type": "number",
                    "format": "float32"
                },
                "mouthVisible": {
                    "type": "boolean"
                },
                "sharpness": {
                    "type": "number",
                    "format": "float32"
                }
            }
        },
        "api-gateway_internal_services.LivenessChallenge": {
            "type": "object",
            "properties": {
                "durationSeconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "instruction": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/api-gateway_internal_services.ChallengeType"
                }
            }
        },
        "api-gateway_internal_services.VerificationDetails": {
            "type": "object",
            "properties": {
                "faceMatchScore": {
                    "type": "number",
                    "format": "float32"
                },
                "faceQuality": {
                    "$ref": "#/definitions/api-gateway_internal_services.FaceQuality"
                },
                "livenessScore": {
                    "type": "number",
                    "format": "float32"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "internal_handlers.BiometricStatusResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_services.BiometricRecord"
                    }
                },
                "registered": {
                    "type": "boolean",
                    "example": true
                },
                "user_id": {
                    "type": "string",
                    "example": "user_456"
                }
            }
        },
        "internal_handlers.ContinuousVerificationRequest": {
            "type": "object",
            "required": [
                "image_data",
                "session_id"
            ],
            "properties": {
                "image_data": {
                    "type": "string",
                    "example": "base64_encoded_image_data"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                }
            }
        },
        "internal_handlers.ContinuousVerificationResponse": {
            "type": "object",
            "properties": {
                "anomalies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api-gateway_internal_services.Anomaly"
                    }
                },
                "confidence_score": {
                    "type": "number",
                    "example": 0.95
                },
                "error": {
                    "type": "string"
                },
                "identity_verified": {
                    "type": "boolean",
                    "example": true
                },
                "liveness_verified": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Continuous verification passed"
                }
            }
        },
        "internal_handlers.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.DetectLivenessRequest": {
            "type": "object",
            "required": [
                "image_data"
            ],
            "properties": {
                "challenge": {
                    "$ref": "#/definitions/api-gateway_internal_services.LivenessChallenge"
                },
                "image_data": {
                    "type": "string",
                    "example": "base64_encoded_image_data"
                }
            }
        },
        "internal_handlers.DetectLivenessResponse": {
            "type": "object",
            "properties": {
                "confidence_score": {
                    "type": "number",
                    "example": 0.92
                },
                "error": {
                    "type": "string"
                },
                "is_live": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Liveness detected"
                }
            }
        },
        "internal_handlers.EndBiometricSessionRequest": {
            "type": "object",
            "required": [
                "session_id"
            ],
            "properties": {
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                }
            }
        },
        "internal_handlers.EndBiometricSessionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Session ended successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "summary": {
                    "$ref": "#/definitions/internal_handlers.SessionSummaryResp"
                }
            }
        },
        "internal_handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ExtendSessionRequest": {
            "type": "object",
            "required": [
                "duration"
            ],
            "properties": {
                "duration": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "internal_handlers.GetActiveBiometricSessionResponse": {
            "type": "object",
            "properties": {
                "has_active_session": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Active session found"
                },
                "session_info": {
                    "$ref": "#/definitions/api-gateway_internal_services.BiometricSessionInfo"
                }
            }
        },
        "internal_handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/internal_handlers.UserResponse"
                }
            }
        },
        "internal_handlers.RegisterBiometricRequest": {
            "type": "object",
            "required": [
                "image_data",
                "type"
            ],
            "properties": {
                "image_data": {
                    "type": "string",
                    "example": "base64_encoded_image_data"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/api-gateway_internal_services.BiometricType"
                        }
                    ],
                    "example": 0
                }
            }
        },
        "internal_handlers.RegisterBiometricResponse": {
            "type": "object",
            "properties": {
                "biometric_id": {
                    "type": "string",
                    "example": "bio_123456"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Biometric registered successfully"
                },
                "quality_score": {
                    "type": "number",
                    "example": 0.95
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "internal_handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/internal_handlers.UserResponse"
                }
            }
        },
        "internal_handlers.SearchUsersRequest": {
            "type": "object",
            "properties": {
                "created_after": {
                    "type": "integer"
                },
                "created_before": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "organization": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.SessionSummaryResp": {
            "type": "object",
            "properties": {
                "duration_seconds": {
                    "type": "integer",
                    "example": 3600
                },
                "failed_verifications": {
                    "type": "integer",
                    "example": 2
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                },
                "success_rate": {
                    "type": "number",
                    "example": 0.96
                },
                "successful_verifications": {
                    "type": "integer",
                    "example": 48
                },
                "total_anomalies": {
                    "type": "integer",
                    "example": 1
                },
                "total_verifications": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "internal_handlers.SetUserStatusRequest": {
            "type": "object",
            "properties": {
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.StartBiometricSessionRequest": {
            "type": "object",
            "properties": {
                "continuous_monitoring": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "internal_handlers.StartBiometricSessionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Biometric session started successfully"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "user_id": {
                    "type": "string",
                    "example": "user_456"
                }
            }
        },
        "internal_handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.UpdateUserRoleRequest": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.UserProfileResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "internal_handlers.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ValidateTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "internal_handlers.ValidateTokenResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "internal_handlers.VerifyIdentityRequest": {
            "type": "object",
            "required": [
                "image_data",
                "type"
            ],
            "properties": {
                "image_data": {
                    "type": "string",
                    "example": "base64_encoded_image_data"
                },
                "session_id": {
                    "type": "string",
                    "example": "session_123"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/api-gateway_internal_services.BiometricType"
                        }
                    ],
                    "example": 0
                }
            }
        },
        "internal_handlers.VerifyIdentityResponse": {
            "type": "object",
            "properties": {
                "confidence_score": {
                    "type": "number",
                    "example": 0.98
                },
                "details": {
                    "$ref": "#/definitions/api-gateway_internal_services.VerificationDetails"
                },
                "error": {
                    "type": "string"
                },
                "liveness_passed": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Identity verified successfully"
                },
                "verified": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT token for authentication. Format: Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}